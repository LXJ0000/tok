syntax = "proto3";
package basicService.api.v1;

option go_package = "basicService/api/basicService/v1;v1";

import "basicService/v1/common.proto";

message Template {
    int64 id = 1;
    string title = 2;
    string content = 3;
    int64 create_time = 4;
    int64 update_time = 5;
}

message CreateTemplateRequest {
    string title = 1;
    string content = 2;
}

message CreateTemplateResponse {
    Metadata meta = 1;
    Template template = 2;
}

message UpdateTemplateRequest {
    int64 template_id = 1;
    string title = 2;
    string content = 3;
}

message UpdateTemplateResponse {
    Metadata meta = 1;
    Template template = 2;
}

message ListTemplateRequest {
    PaginationRequest pagination_request = 1;
    repeated SearchField search_fields = 2;
}

message ListTemplateResponse {
    Metadata meta = 1;
    PaginationResponse pagination_response = 2;
    repeated Template templates = 3;
}

message GetTemplateRequest {
    int64 template_id = 1;
}

message GetTemplateResponse {
    Metadata meta = 1;
    Template template = 2;
}

message RemoveTemplateRequest {
    int64 template_id = 1;
}

message RemoveTemplateResponse {
    Metadata meta = 1;
}

message SendSmsRequest {
    string to = 1;
    int64 template_id = 2;
    map<string, string> data = 3;
}

message SendSmsResponse {
    Metadata meta = 1;
}

message SendEmailRequest {
    string to = 1;
    int64 template_id = 2;
    string email_title = 3;
    map<string, string> data = 4;
}

message SendEmailResponse {
    Metadata meta = 1;
}

enum PostType {
    SMS = 0;
    EMAIL = 1;
}

message SendRequest {
    PostType post_type = 1;
    string content = 2;
    string title = 3;
    string to = 4;
    int64 template_id = 5;
}

message SendResponse {
    Metadata meta = 1;
}

service PostService {
    rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse);
    rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse);
    rpc ListTemplate(ListTemplateRequest) returns (ListTemplateResponse);
    rpc GetTemplate(GetTemplateRequest) returns (GetTemplateResponse);
    rpc RemoveTemplate(RemoveTemplateRequest) returns (RemoveTemplateResponse);
    rpc SendSms(SendSmsRequest) returns (SendSmsResponse);
    rpc SendEmail(SendEmailRequest) returns (SendEmailResponse);
    rpc Send(SendRequest) returns (SendResponse);
}
