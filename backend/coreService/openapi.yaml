# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/user:
        put:
            tags:
                - UserService
            operationId: UserService_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.v1.UpdateUserInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.UpdateUserInfoResponse'
        post:
            tags:
                - UserService
            operationId: UserService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.CreateUserResponse'
    /v1/user/info:
        get:
            tags:
                - UserService
            operationId: UserService_GetUserInfo
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: accountId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.GetUserInfoResponse'
    /v1/video/feed:
        post:
            tags:
                - VideoService
            operationId: VideoService_FeedShortVideo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.v1.FeedShortVideoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.FeedShortVideoResponse'
    /v1/video/list:
        post:
            tags:
                - VideoService
            operationId: VideoService_ListPublishedVideo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.v1.ListPublishedVideoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.ListPublishedVideoResponse'
    /v1/video/publish:
        post:
            tags:
                - VideoService
            operationId: VideoService_PublishVideo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.v1.PublishVideoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.PublishVideoResponse'
    /v1/video/{videoId}:
        get:
            tags:
                - VideoService
            operationId: VideoService_GetVideoById
            parameters:
                - name: videoId
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.v1.GetVideoByIdResponse'
components:
    schemas:
        coreService.v1.Author:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                isFollowing:
                    type: string
        coreService.v1.CreateUserRequest:
            type: object
            properties:
                mobile:
                    type: string
                email:
                    type: string
                accountId:
                    type: string
        coreService.v1.CreateUserResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                userId:
                    type: string
        coreService.v1.FeedShortVideoRequest:
            type: object
            properties:
                latestTime:
                    type: string
                userId:
                    type: string
                feedNum:
                    type: string
        coreService.v1.FeedShortVideoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                videos:
                    type: array
                    items:
                        $ref: '#/components/schemas/coreService.v1.Video'
        coreService.v1.GetUserInfoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                user:
                    $ref: '#/components/schemas/coreService.v1.User'
        coreService.v1.GetVideoByIdResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                video:
                    $ref: '#/components/schemas/coreService.v1.Video'
        coreService.v1.ListPublishedVideoRequest:
            type: object
            properties:
                userId:
                    type: string
                latestTime:
                    type: string
                pagination:
                    $ref: '#/components/schemas/coreService.v1.PaginationRequest'
        coreService.v1.ListPublishedVideoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                videos:
                    type: array
                    items:
                        $ref: '#/components/schemas/coreService.v1.Video'
                pagination:
                    $ref: '#/components/schemas/coreService.v1.PaginationResponse'
        coreService.v1.Metadata:
            type: object
            properties:
                bizCode:
                    type: integer
                    format: int32
                message:
                    type: string
                domain:
                    type: string
                reason:
                    type: array
                    items:
                        type: string
        coreService.v1.PaginationRequest:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                size:
                    type: integer
                    format: int32
                sort:
                    type: array
                    items:
                        $ref: '#/components/schemas/coreService.v1.SortField'
        coreService.v1.PaginationResponse:
            type: object
            properties:
                page:
                    type: integer
                    format: int32
                total:
                    type: integer
                    format: int32
                count:
                    type: integer
                    format: int32
        coreService.v1.PublishVideoRequest:
            type: object
            properties:
                title:
                    type: string
                coverUrl:
                    type: string
                playUrl:
                    type: string
                description:
                    type: string
                userId:
                    type: string
        coreService.v1.PublishVideoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
                videoId:
                    type: string
        coreService.v1.SortField:
            type: object
            properties:
                field:
                    type: string
                order:
                    type: integer
                    format: enum
        coreService.v1.UpdateUserInfoRequest:
            type: object
            properties:
                userId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                backgroundImage:
                    type: string
                signature:
                    type: string
        coreService.v1.UpdateUserInfoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.v1.Metadata'
        coreService.v1.User:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                backgroundImage:
                    type: string
                signature:
                    type: string
                mobile:
                    type: string
                email:
                    type: string
                followCount:
                    type: string
                followerCount:
                    type: string
                totalFavorited:
                    type: string
                workCount:
                    type: string
                favoriteCount:
                    type: string
        coreService.v1.Video:
            type: object
            properties:
                id:
                    type: string
                title:
                    type: string
                author:
                    $ref: '#/components/schemas/coreService.v1.Author'
                playUrl:
                    type: string
                coverUrl:
                    type: string
                favoriteCount:
                    type: string
                commentCount:
                    type: string
                collectCount:
                    type: string
                isFavorite:
                    type: string
                isCollect:
                    type: string
                uploadTime:
                    type: string
                description:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: UserService
    - name: VideoService
