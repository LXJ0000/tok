# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    /v1/user:
        put:
            tags:
                - UserService
            operationId: UserService_UpdateUserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.api.v1.UpdateUserInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.api.v1.UpdateUserInfoResponse'
        post:
            tags:
                - UserService
            operationId: UserService_CreateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/coreService.api.v1.CreateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.api.v1.CreateUserResponse'
    /v1/user/info:
        get:
            tags:
                - UserService
            operationId: UserService_GetUserInfo
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: string
                - name: accountId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/coreService.api.v1.GetUserInfoResponse'
components:
    schemas:
        coreService.api.v1.CreateUserRequest:
            type: object
            properties:
                mobile:
                    type: string
                email:
                    type: string
                accountId:
                    type: string
        coreService.api.v1.CreateUserResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.api.v1.Metadata'
                userId:
                    type: string
        coreService.api.v1.GetUserInfoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.api.v1.Metadata'
                user:
                    $ref: '#/components/schemas/coreService.api.v1.User'
        coreService.api.v1.Metadata:
            type: object
            properties:
                bizCode:
                    type: integer
                    format: int32
                message:
                    type: string
                domain:
                    type: string
                reason:
                    type: array
                    items:
                        type: string
        coreService.api.v1.UpdateUserInfoRequest:
            type: object
            properties:
                userId:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                backgroundImage:
                    type: string
                signature:
                    type: string
        coreService.api.v1.UpdateUserInfoResponse:
            type: object
            properties:
                meta:
                    $ref: '#/components/schemas/coreService.api.v1.Metadata'
        coreService.api.v1.User:
            type: object
            properties:
                id:
                    type: string
                name:
                    type: string
                avatar:
                    type: string
                backgroundImage:
                    type: string
                signature:
                    type: string
                mobile:
                    type: string
                email:
                    type: string
                followCount:
                    type: string
                followerCount:
                    type: string
                totalFavorited:
                    type: string
                workCount:
                    type: string
                favoriteCount:
                    type: string
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: UserService
